# - This workflow executes a mongodump to backup the running mongo container db and store it in the shared volume which
# - containes all the backups. The backup is zipped and a date is appended to the file. The workflow eliminates backups 
# - older than 14 days.

name: Daily Backup

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  start_mongo:
    runs-on: ubuntu-latest

    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Daily backup MongoDB
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            DATE=$(date +'%Y%m%d')
            BACKUP_DIR="/home/carl/backup"
            BACKUP_FILE="mongodump_${DATE}.tar.gz"
            MONGO_USERNAME="${{ secrets.MONGO_USERNAME }}"
            MONGO_PASSWORD="${{ secrets.MONGO_PASSWORD }}"
            VPS_PASSWORD="${{ secrets.VPS_PASSWORD }}"
            CONTAINER_NAME="ts-mongo"

            echo "${VPS_PASSWORD}" | sudo -S docker exec ${CONTAINER_NAME} mongodump --host localhost --port 27017 --username ${MONGO_USERNAME} --password ${MONGO_PASSWORD} --out ${BACKUP_DIR}/${DATE}
            
            # Compress the backup
            echo "${VPS_PASSWORD}" | sudo -S tar -zcvf ${BACKUP_DIR}/${BACKUP_FILE} -C ${BACKUP_DIR} ${DATE}
            
            # Delete backups older than two weeks
            echo "${VPS_PASSWORD}" | sudo -S find ${BACKUP_DIR} -type f -name 'mongodump_*' -mtime +14 -exec rm -f {} \;
