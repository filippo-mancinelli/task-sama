# This workflow is useful for updating the mongo container when changes are made to 
# the configuration file on ./backend/mongoDB/mongod.conf. This workflow will: 
# - build the Dockerfile on ./backend/DockerfileMongo
# - push the new image on Dockerhub with "latest" tag
# - copy the mongo configuration file via scp into the server
# - ssh into the server, pull the new image, run and replace mongo container.

name: Deploy mongo container with custom configuration file

on:
  workflow_dispatch:

jobs:

  build_push_pull_replace:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Print Working Directory
        run: |
          pwd
          ls -la
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./backend/mongoDB
          push: true
          file: ./backend/DockerfileMongo
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ts-mongo:latest

      - name: Copy mongo configuration file to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./backend/mongoDB/mongod.conf"
          target: "/home/carl/configurations/"
          strip_components: 3

      - name: Replace container
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            PASSWORD="${{ secrets.VPS_PASSWORD }}"
            CONTAINER_NAME="mongo"
            echo "${PASSWORD}" | sudo -S docker stop ${CONTAINER_NAME} || true
            echo "${PASSWORD}" | sudo -S docker rm ${CONTAINER_NAME} || true
            echo "${PASSWORD}" | sudo -S docker pull crosta/ts-mongo:latest
            echo "${PASSWORD}" | sudo -S docker run -d -p 27117:27117 --name ${CONTAINER_NAME} -v /home/carl/data/db:/data/db -v /home/carl/configurations/mongod.conf:/etc/mongod.conf mongo:latest


